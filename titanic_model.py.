import pandas as pd
from sklearn.model_selection import cross_val_score
from sklearn.preprocessing import LabelEncoder
from sklearn.ensemble import GradientBoostingClassifier

# Last inn datasettet
df = pd.read_csv("train.csv")

# Fyll inn manglende verdier
df["Age"].fillna(df["Age"].median(), inplace=True)
df["Embarked"].fillna(df["Embarked"].mode()[0], inplace=True)
df["Fare"].fillna(df["Fare"].median(), inplace=True)

# FamilySize + IsAlone
df["FamilySize"] = df["SibSp"] + df["Parch"] + 1
df["IsAlone"] = (df["FamilySize"] == 1).astype(int)

# Title
df["Title"] = df["Name"].str.extract(" ([A-Za-z]+)\.", expand=False)
df["Title"] = df["Title"].replace(
    ['Lady','Countess','Capt','Col','Don','Dr','Major','Rev',
     'Sir','Jonkheer','Dona'],'Rare')
df["Title"] = df["Title"].replace({'Mlle':'Miss','Ms':'Miss','Mme':'Mrs'})

# Label encode kategoriske variabler
label = LabelEncoder()
for col in ["Sex","Embarked","Title"]:
    df[col] = label.fit_transform(df[col])

# Features
features = ["Pclass","Sex","Age","Fare","Embarked",
            "FamilySize","IsAlone","Title"]
X = df[features]
y = df["Survived"]

# Modell
model = GradientBoostingClassifier(random_state=42)

# Kryssvalidering (5 folds gir mer robust score)
scores = cross_val_score(model, X, y, cv=5, scoring="accuracy")

print("Cross-validated accuracy:", scores.mean())
